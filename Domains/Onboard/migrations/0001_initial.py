# Generated by Django 5.1.7 on 2025-04-21 15:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Online Retail & Marketplace', 'Online Retail & Marketplace'), ('Fashion & Apparel', 'Fashion & Apparel'), ('Cosmetics & Beauty', 'Cosmetics & Beauty'), ('Electronics & Gadgets', 'Electronics & Gadgets'), ('Food & Grocery', 'Food & Grocery'), ('Toys & Baby Products', 'Toys & Baby Products'), ('Furniture & Home Decor', 'Furniture & Home Decor'), ('Jewelry & Accessories', 'Jewelry & Accessories'), ('Luxury Goods', 'Luxury Goods')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Online Retail & Marketplace', 'Online Retail & Marketplace'), ('Fashion & Apparel', 'Fashion & Apparel'), ('Cosmetics & Beauty', 'Cosmetics & Beauty'), ('Electronics & Gadgets', 'Electronics & Gadgets'), ('Food & Grocery', 'Food & Grocery'), ('Toys & Baby Products', 'Toys & Baby Products'), ('Furniture & Home Decor', 'Furniture & Home Decor'), ('Jewelry & Accessories', 'Jewelry & Accessories'), ('Luxury Goods', 'Luxury Goods')], max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Onboard.rolemodel')),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('page_type', models.CharField(choices=[('Landing Page', 'Landing Page'), ('Search Results Page', 'Search Results Page'), ('Product Page', 'Product Page')], default='Landing Page', max_length=20)),
                ('screenshot', models.TextField(blank=True, null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('css', models.TextField(blank=True, null=True)),
                ('ui_report', models.TextField(blank=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Onboard.business')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoleModelPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_type', models.CharField(choices=[('Landing Page', 'Landing Page'), ('Search Results Page', 'Search Results Page'), ('Product Page', 'Product Page')], max_length=50)),
                ('wpm', models.FilePathField(match='.*\\.json$', null=True, path='Records/WPM-REPORTS', recursive=True)),
                ('ui_report', models.FilePathField(match='.*\\.json$', null=True, path='Records/UI-REPORTS', recursive=True)),
                ('url', models.URLField(blank=True, max_length=1000, null=True)),
                ('role_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='Onboard.rolemodel')),
            ],
        ),
    ]
